openapi: 3.0.0
info:
  description: REST interface for the Insights Platform Host Inventory application.
  version: 1.0.0
  title: Insights Host Inventory REST Interface
paths:

  /hosts:
    get:
      operationId: api.host.get_host_list
      tags:
        - hosts
      summary: Read the entire list of hosts
      description: >-
        Read the entire list of all hosts available to the account. The list can
        be filtered either by tags or by a display name.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: tag
          schema:
            type: array
            items:
              type: string
          description: >-
            A comma separated list of all tags that a matched host must own.
            Example: namespace/tag:value,somens/sometag:someval
          required: false
          #collectionFormat: multi
        - in: query
          name: display_name
          schema:
            type: string
          description: >-
            A part of a searched host’s display name. Doesn’t apply if a search
            by tag query is provided.
          required: false
        - in: query
          name: fqdn
          schema:
            type: string
          description: Filter by a host's FQDN
          required: false
        - in: query
          name: hostname_or_id
          schema:
            type: string
          description: 'Search for a host by display_name, fqdn, id'
          required: false
        - in: query
          name: insights_id
          schema:
            type: string
            format: uuid
          description: Search for a host by insights_id
          required: false
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          description: Successfully read the hosts list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostQueryOutput'
    post:
      operationId: api.host.add_host_list
      tags:
        - hosts
      summary: Create/update multiple host and add them to the host list
      description: >-
        Create a new host and add it to the host list or update an existing
        hosts. A host is updated if there is already one with the same
        canonicals facts and belonging to the same account.
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      requestBody:
        description: A list of host objects to be added to the host list
        required: true
        content:
          application/json:
            schema:
              x-body-name: host_list
              type: array
              items:
                $ref: '#/components/schemas/Host'
      responses:
        '207':
          description: Successfully created a host.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkHostOut'
              examples:
                update:
                  value:
                    status: 200
                    host: Host details
                create:
                  value:
                    status: 201
                    host: Host details
                error:
                  value:
                    status: 400
                    title: Invalid Request
                    detail: Could not process request
                    host: Input host data
        '400':
          description: Invalid request.
  '/hosts/{host_id_list}':
    get:
      tags:
        - hosts
      summary: Find hosts by their IDs
      description: Find one or more hosts by their ID.
      operationId: api.host.get_host_by_id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: host_id_list
          description: A comma separated list of host IDs.
          required: true
          schema:
            type: array
            #collectionFormat: csv
            items:
              type: string
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          description: Successfully searched for hosts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostQueryOutput'
        '400':
          description: Invalid request.
        '404':
          description: Host not found.
  '/hosts/{host_id_list}/facts/{namespace}':
    patch:
      tags:
        - hosts
      summary: Merge facts under a namespace
      description: Merge one or multiple hosts facts under a namespace.
      operationId: api.host.merge_facts
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: host_id_list
          description: IDs of the hosts that own the facts to be merged.
          required: true
          schema:
            type: array
            #collectionFormat: csv
            items:
              type: string
        - in: path
          name: namespace
          description: A namespace of the merged facts.
          required: true
          schema:
            type: string
      requestBody:
        description: A dictionary with the new facts to merge with the original ones.
        required: true
        content:
          application/json:
            schema:
              x-body-name: fact_dict
              $ref: '#/components/schemas/Facts'
      responses:
        '200':
          description: Successfully merged facts.
        '400':
          description: Invalid request.
        '404':
          description: Host or namespace not found.
    put:
      tags:
        - hosts
      summary: Replace facts under a namespace
      description: Replace facts under a namespace
      security:
        - ApiKeyAuth: []
      operationId: api.host.replace_facts
      parameters:
        - in: path
          name: host_id_list
          description: IDs of the hosts that own the facts to be replaced.
          required: true
          schema:
            type: array
            #collectionFormat: csv
            items:
              type: string
        - in: path
          name: namespace
          description: A namespace of the merged facts.
          required: true
          schema:
            type: string
      requestBody:
        description: A dictionary with the new facts to replace the original ones.
        required: true
        content:
          application/json:
            schema:
              x-body-name: fact_dict
              $ref: '#/components/schemas/Facts'
      responses:
        '200':
          description: Successfully replaced facts.
        '400':
          description: Invalid request.
        '404':
          description: Host or namespace not found.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: app.auth.token_validator
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-rh-identity
      description: >-
        Base64-encoded JSON identity header provided by 3Scale. Contains an
        account number of the user issuing the request. Format of the JSON:
        {"identity": {"account_number": "12345678"}}
      x-apikeyInfoFunc: app.auth.header_validator
  parameters:
    pageParam:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      description: A page number of the items to return.
    perPageParam:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 50
      description: A number of items to return per page.
  schemas:
    BulkHostOut:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items in the "data" list.
        errors:
          type: integer
          description: Number of items in the "data" list that contain errors.
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkHostOutDetails'
          description: List of hosts that were created, updated or failed to be processed.
    BulkHostOutDetails:
      type: object
      properties:
        status:
          type: integer
          description:  HTTP status code of the results of the host create/update process
        host:
          $ref: '#/components/schemas/HostOut'
        title:
          type: string
          description: Short description of why a host failed to be created or updated.
        detail:
          type: string
          description: Details about why a host failed to be created or updated.
    Facts:
      title: Host facts
      description: A set of string facts about a host.
      type: object
      additionalProperties:
        type: string
      example:
        fact1: value1
        fact2: value2
    FactSet:
      title: Host facts under a namespace
      description: A set of string facts belonging to a single namespace.
      properties:
        namespace:
          type: string
          description: A namespace the facts belong to.
        facts:
          type: object
          description: The facts themselves.
    Host:
      title: Host data
      description: >-
        Data of a single host belonging to an account. Represents the hosts
        without its Inventory metadata.
      type: object
      required:
        - account
      properties:
        display_name:
          description: >-
            A host’s human-readable display name, e.g. in a form of a domain
            name.
          type: string
          example: host1.mydomain.com
          nullable: true
        account:
          description: A Red Hat Account number that owns the host.
          type: string
          example: '000102'
        insights_id:
          description: >-
            An ID defined in /etc/insights-client/machine-id. This field is
            considered a canonical fact.
          type: string
          format: uuid
          example: 3f01b55457674041b75e41829bcee1dc
          nullable: true
        rhel_machine_id:
          description: >-
            A Machine ID of a RHEL host.  This field is considered to be a
            canonical fact.
          type: string
          format: uuid
          example: 3f01b55457674041b75e41829bcee1dc
          nullable: true
        subscription_manager_id:
          description: >-
            A Red Hat Subcription Manager ID of a RHEL host.  This field is
            considered to be a canonical fact.
          type: string
          format: uuid
          example: 3f01b55457674041b75e41829bcee1dc
          nullable: true
        satellite_id:
          description: >-
            A Red Hat Satellite ID of a RHEL host.  This field is considered to
            be a canonical fact.
          type: string
          format: uuid
          example: 3f01b55457674041b75e41829bcee1dc
          nullable: true
        bios_uuid:
          description: >-
            A UUID of the host machine BIOS.  This field is considered to be a
            canonical fact.
          type: string
          format: uuid
          example: 3f01b55457674041b75e41829bcee1dc
          nullable: true
        ip_addresses:
          description: >-
            Host’s network IP addresses.  This field is considered to be a
            canonical fact.
          type: array
          items:
            type: string
          nullable: true
          example:
            - 10.10.0.1
            - 10.0.0.2
        fqdn:
          description: >-
            A host’s Fully Qualified Domain Name.  This field is considered to
            be a canonical fact.
          type: string
          example: my.host.example.com
          nullable: true
        mac_addresses:
          description: >-
            Host’s network interfaces MAC addresses.  This field is considered
            to be a canonical fact.
          type: array
          items:
            type: string
          nullable: true
          example:
            - 'c2:00:d0:c8:61:01'
        facts:
          description: A set of facts belonging to the host.
          type: array
          items:
            $ref: '#/components/schemas/FactSet'
        tags:
          description: A set of tags assigned to the host.
          type: array
          items:
            type: string
    HostOut:
      title: A Host Inventory entry
      description: A database entry representing a single host with its Inventory metadata.
      allOf:
        - $ref: '#/components/schemas/Host'
        - type: object
          properties:
            id:
              description: >-
                A durable and reliable platform-wide host identifier.
                Applications should use this identifier to reference hosts.
              type: string
              format: uuid
            created:
              description: A timestamp when the entry was created.
              type: string
              format: date-time
            updated:
              description: A timestamp when the entry was last updated.
              type: string
              format: date-time
    HostQueryOutput:
      title: A Host Inventory query result
      description: >-
        A paginated host search query result with host entries and their
        Inventory metadata.
      type: object
      required:
        - count
        - page
        - per_page
        - total
        - results
      properties:
        count:
          description: A number of entries on the current page.
          type: integer
        page:
          description: A current page number.
          type: integer
        per_page:
          description: A page size – a number of entries per single page.
          type: integer
        total:
          description: A total count of the found entries.
          type: integer
        results:
          description: Actual host search query result entries.
          type: array
          items:
            $ref: '#/components/schemas/HostOut'
