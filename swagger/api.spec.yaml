swagger: "2.0"
info:
  description: REST interface for the Insights Platform Host Inventory application.
  version: 1.0.0
  title: Insights Host Inventory REST Interface
consumes:
- application/json
produces:
- application/json
basePath: /r/insights/platform/inventory/api/v1

parameters:
  rhIdentityHeader:
    in: header
    name: x-rh-identity
    required: true
    type: string
    format: byte
    description: 'Base64-encoded JSON identity header provided by 3Scale.
      Contains an account number of the user issuing the request. Format of the
      JSON: {"identity": {"account_number": "12345678"}}'
  pageParam:
    in: query
    name: page
    required: false
    type: integer
    minimum: 1
    default: 1
    description: A page number of the items to return.
  perPageParam:
    in: query
    name: per_page
    required: false
    type: integer
    minimum: 1
    maximum: 100
    default: 50
    description: A number of items to return per page.

paths:
  /hosts:
    parameters:
      - $ref: '#/parameters/rhIdentityHeader'
    get:
      operationId: api.host.get_host_list
      tags:
      - hosts
      summary: Read the entire list of hosts
      description: Read the entire list of all hosts available to the account.
        The list can be filtered either by tags or by a display name.
      parameters:
        - name: tag
          in: query
          type: array
          items:
            type: string
          description: 'A comma separated list of all tags that a matched host
            must own. Example: namespace/tag:value,somens/sometag:someval'
          required: false
          collectionFormat: multi
        - name: display_name
          in: query
          type: string
          description: A part of a searched host’s display name. Doesn’t apply
            if a search by tag query is provided.
          required: false
        - name: fqdn
          in: query
          type: string
          description: Filter by a host's FQDN
          required: false
        - $ref: '#/parameters/perPageParam'
        - $ref: '#/parameters/pageParam'
      responses:
        "200":
          description: Successfully read the hosts list.
          schema:
            $ref: '#/definitions/HostQueryOutput'
    post:
      operationId: api.host.add_host
      tags:
      - hosts
      summary: Create/update a host and add it to the host list
      description: Create a new host and add it to the host list or update an
        existing hosts. A host is updated if there is already one with the same
        canonicals facts and belonging to the same account.
      parameters:
      - in: body
        name: host
        description: A host object to be added to the host list
        required: true
        schema:
          $ref: '#/definitions/Host'
      responses:
        "201":
          description: Successfully created a host.
          schema:
            $ref: '#/definitions/HostOut'
        "200":
          description: Successfully updated a host.
          schema:
            $ref: '#/definitions/HostOut'
  '/hosts/{host_id_list}':
    parameters:
      - $ref: '#/parameters/rhIdentityHeader'
    get:
      tags:
      - hosts
      summary: Find hosts by their IDs
      description: Find one or more hosts by their ID.
      operationId: api.host.get_host_by_id
      produces:
      - application/json
      parameters:
        - name: host_id_list
          in: path
          description: A comma separated list of host IDs.
          required: true
          type: array
          collectionFormat: csv
          items:
            type: string
        - $ref: '#/parameters/perPageParam'
        - $ref: '#/parameters/pageParam'
      responses:
        "200":
          description: Successfully searched for hosts.
          schema:
            $ref: '#/definitions/HostQueryOutput'
        '400':
          description: Invalid request.
        "404":
          description: Host not found.
  '/hosts/{host_id_list}/facts/{namespace}':
    parameters:
      - $ref: '#/parameters/rhIdentityHeader'
    patch:
      tags:
      - hosts
      summary: Merge facts under a namespace
      description: Merge one or multiple hosts facts under a namespace.
      operationId: api.host.merge_facts
      produces:
      - application/json
      parameters:
      - name: host_id_list
        in: path
        description: IDs of the hosts that own the facts to be merged.
        required: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: namespace
        in: path
        description: A namespace of the merged facts.
        required: true
        type: string
      - in: body
        name: fact_dict
        description: A dictionary with the new facts to merge with the original
          ones.
        required: true
        schema:
          $ref: '#/definitions/Facts'
      responses:
        "200":
          description: Successfully merged facts.
        "400":
          description: Invalid request.
        "404":
          description: Host or namespace not found.
    put:
      tags:
      - hosts
      summary: Replace facts under a namespace
      description: Replace facts under a namespace
      operationId: api.host.replace_facts
      produces:
      - application/json
      parameters:
      - name: host_id_list
        in: path
        description: IDs of the hosts that own the facts to be replaced.
        required: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: namespace
        in: path
        description: A namespace of the merged facts.
        required: true
        type: string
      - in: body
        name: fact_dict
        description: A dictionary with the new facts to replace the original
          ones.
        required: true
        schema:
          $ref: '#/definitions/Facts'
      responses:
        "200":
          description: Successfully replaced facts.
        "400":
          description: Invalid request.
        "404":
          description: Host or namespace not found.
definitions:
  Facts:
    title: Host facts
    description: A set of string facts about a host.
    type: object
    additionalProperties:
      type: string
    example:
      fact1: value1
      fact2: value2
  FactSet:
    title: Host facts under a namespace
    description: A set of string facts belonging to a single namespace.
    properties:
      namespace:
        type: string
        description: A namespace the facts belong to.
      facts:
        type: object
        description: The facts themselves.
  Host:
    title: Host data
    description: Data of a single host belonging to an account. Represents the
      hosts without its Inventory metadata.
    type: object
    required:
    - account
    properties:
      display_name:
        description: A host’s human-readable display name, e.g. in a form of a
          domain name.
        type: string
        example: host1.mydomain.com
        x-nullable: true
      account:
        description: A Red Hat Account number that owns the host.
        type: string
        example: "000102"
      insights_id:
        description: An ID defined in /etc/insights-client/machine-id. This field is
          considered a canonical fact.
        type: string
        format: uuid
        example: 3f01b55457674041b75e41829bcee1dc
        x-nullable: true
      rhel_machine_id:
        description: A Machine ID of a RHEL host.  This field is considered
          to be a canonical fact.
        type: string
        format: uuid
        example: 3f01b55457674041b75e41829bcee1dc
        x-nullable: true
      subscription_manager_id:
        description: A Red Hat Subcription Manager ID of a RHEL host.  This
          field is considered to be a canonical fact.
        type: string
        format: uuid
        example: 3f01b55457674041b75e41829bcee1dc
        x-nullable: true
      satellite_id:
        description: A Red Hat Satellite ID of a RHEL host.  This field is
          considered to be a canonical fact.
        type: string
        format: uuid
        example: 3f01b55457674041b75e41829bcee1dc
        x-nullable: true
      bios_uuid:
        description: A UUID of the host machine BIOS.  This field is considered
          to be a canonical fact.
        type: string
        format: uuid
        example: 3f01b55457674041b75e41829bcee1dc
        x-nullable: true
      ip_addresses:
        description: Host’s network IP addresses.  This field is considered
          to be a canonical fact.
        type: array
        items:
          type: string
        x-nullable: true
        example:
        - 10.10.0.1
        - 10.0.0.2
      fqdn:
        description: A host’s Fully Qualified Domain Name.  This field is
          considered to be a canonical fact.
        type: string
        example: my.host.example.com
        x-nullable: true
      mac_addresses:
        description: Host’s network interfaces MAC addresses.  This field
          is considered to be a canonical fact.
        type: array
        items:
          type: string
        x-nullable: true
        example:
        - c2:00:d0:c8:61:01
      facts:
        description: A set of facts belonging to the host.
        type: array
        items:
          $ref: '#/definitions/FactSet'
      tags:
        description: A set of tags assigned to the host.
        type: array
        items:
          type: string
  HostOut:
    title: A Host Inventory entry
    description: A database entry representing a single host with its Inventory
      metadata.
    allOf:
      - $ref: '#/definitions/Host'
      - type: object
        properties:
          id:
            description: A durable and reliable platform-wide host identifier. Applications should use this identifier to reference hosts.
            type: string
            format: uuid
          created:
            description: A timestamp when the entry was created.
            type: string
            format: date-time
          updated:
            description: A timestamp when the entry was last updated.
            type: string
            format: date-time
  HostQueryOutput:
    title: A Host Inventory query result
    description: A paginated host search query result with host entries and
      their Inventory metadata.
    type: object
    required:
      - count
      - page
      - per_page
      - total
      - results
    properties:
      count:
        description: A number of entries on the current page.
        type: integer
      page:
        description: A current page number.
        type: integer
      per_page:
        description: A page size – a number of entries per single page.
        type: integer
      total:
        description: A total count of the found entries.
        type: integer
      results:
        description: Actual host search query result entries.
        type: array
        items:
          $ref: '#/definitions/HostOut'
