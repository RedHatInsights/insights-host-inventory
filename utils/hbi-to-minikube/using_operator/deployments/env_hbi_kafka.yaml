apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-05-27T17:05:17Z"
  generation: 1
  labels:
    app: env-hbi
    env-app: env-hbi-kafka
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
          f:env-app: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"4f14812e-1e6e-4458-8307-2c91a4a68b40"}:
            .: {}
            f:apiVersion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:env-app: {}
          f:spec:
            f:containers:
              k:{"name":"env-hbi-kafka"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"KAFKA_ADVERTISED_LISTENERS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_BROKER_ID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_INTER_BROKER_LISTENER_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_LISTENER_SECURITY_PROTOCOL_MAP"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KAFKA_ZOOKEEPER_CONNECT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"LOG_DIR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:tcpSocket:
                    .: {}
                    f:port: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":9092,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:tcpSocket:
                    .: {}
                    f:port: {}
                  f:timeoutSeconds: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/kafka/secrets"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/kafka"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/kafka/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"env-hbi-kafka"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"mq-kafka-1"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"mq-kafka-2"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
    manager: manager
    operation: Update
    time: "2021-05-27T17:05:17Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-05-27T17:06:13Z"
  name: env-hbi-kafka
  namespace: hbi
  ownerReferences:
  - apiVersion: cloud.redhat.com/v1alpha1
    controller: true
    kind: ClowdEnvironment
    name: env-hbi
    uid: 4f14812e-1e6e-4458-8307-2c91a4a68b40
  resourceVersion: "2015"
  uid: a7d39161-872c-46d4-a76d-ee206628417f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: env-hbi
      env-app: env-hbi-kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: env-hbi
        env-app: env-hbi-kafka
    spec:
      containers:
      - env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://env-hbi-kafka.hbi.svc:29092, LOCAL://localhost:9092
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: env-hbi-zookeeper:32181
        - name: LOG_DIR
          value: /var/lib/kafka
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT, LOCAL:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: LOCAL
        image: quay.io/cloudservices/cp-kafka:5.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9092
          timeoutSeconds: 2
        name: env-hbi-kafka
        ports:
        - containerPort: 9092
          name: kafka
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9092
          timeoutSeconds: 2
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/kafka
          name: env-hbi-kafka
        - mountPath: /etc/kafka/secrets
          name: mq-kafka-1
        - mountPath: /var/lib/kafka/data
          name: mq-kafka-2
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: env-hbi-env
      serviceAccountName: env-hbi-env
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: env-hbi-kafka
      - emptyDir: {}
        name: mq-kafka-1
      - emptyDir: {}
        name: mq-kafka-2
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-05-27T17:06:13Z"
    lastUpdateTime: "2021-05-27T17:06:13Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-05-27T17:05:17Z"
    lastUpdateTime: "2021-05-27T17:06:13Z"
    message: ReplicaSet "env-hbi-kafka-5586985c9c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
